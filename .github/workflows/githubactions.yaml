name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  Maven-java-Build:

    runs-on : self-hosted

    # defaults:
    #   run:
    #   working-directory: client
 
    outputs:
      output1: ${{ steps.Install_git.outputs.test }}

    strategy :
      matrix :
        version : [1.8]
    
    steps:
    - name : Giving permission to our Repository
      uses: actions/checkout@v2

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.version }}

    - name: Install_git
      run: |
        sudo apt-get install -y git 
        echo "::set-output name=test::git --version"

    - name: Build project with Maven
      run: mvn -B package --file pom.xml

    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Storing artifacts
      uses: actions/upload-artifact@v3
      with:
        name: myArtifacts
        path : ./target/
        # retention-days: 1
    
    - name: Create dir
      run: |
        sudo mkdir -p /opt/mydirname

    - name: Run build script
      run: ./.github/myfile.sh
      shell: bash

        
#   Building-and-Pushing-an-Docker-Image:
  
#       runs-on : self-hosted
#       steps :
#         - name : Giving permission to our Repository
#           uses: actions/checkout@v2
          
#         - name: docker-upload
#           uses: mr-smithers-excellent/docker-build-push@v5
#           with:
#            image: raji2306/demo-app01
#            registry: docker.io
#            username: ${{ secrets.DOCKER_USERNAME }}
#            password: ${{ secrets.DOCKER_PASSWORD }}
           
#         - name: echo_da
#           run: echo ${{needs.Maven-java-Build.outputs.output1}} 
