name: Java CI with Maven

run-name : Java CI with Maven Project

#Concurrency Testing 

on:
#   push:
#     branches:  
#       - master 
#       - '!feature'
#     tags :
#       - 'v2**'
#     paths :
#       - '**.sh'
#   schedule :
#     - cron: '*/15 * * * *'
  pull_request:
    branches: [ master ]
  workflow_dispatch :
#   issues:
#     types:
#       - opened
#       - labeled

concurrency :
  group: con-group 
#   cancel-in-progress: true

env : 
  name : Rajesh  
  
jobs:
  Maven-java-Build:

    runs-on : self-hosted
    
    # defaults:
    #   run:
    #   working-directory: client
 
    outputs:
      output1: ${{ steps.contents.outputs.test }}
      output2: ${{ steps.conty.outputs.taggy }}

    strategy :
      matrix :
        version : [1.8]
    
    steps:
    - name : Giving permission to our Repository
      uses: actions/checkout@v2
      
    - name : Running sleep command to test concurrency 
      run : | 
            echo " Sleep command started running "
            sleep 5m
            echo " Sleep command finished "
      
    - name : Running Default Environments 
      run : |
            echo "Event name : ${GITHUB_EVENT_NAME}"
            echo "Who triggered it : ${GITHUB_ACTOR}"
            echo "Owner : ${GITHUB_REPOSITORY_OWNER}"
            echo "Commit id : ${GITHUB_SHA}"
            echo "Server : ${GITHUB_SERVER_URL}"  
            echo " ${{github. ref_name}} "
            
    - name : Access context 
      run : |
            echo " Repo url : ${{ github.repositoryUrl }} "
            echo " Retention days : ${{ github.retention_days	}}"
            echo " Env value : ${{ env.name }} "
            echo " Job : ${{ toJSON(job) }} "
            echo " Steps outputs : ${{ steps.contents.outputs }}"
            echo " Runner Os and name : ${{ runner.name }} ${{ runner.os }}"
            echo " Secret : ${{ secrets.DOCKER_USERNAME }}"
            echo " Matrix : ${{ matrix.version }}"
            echo " Job outputs :  ${{ github.job }}"
            
    - name : Check Job status 
      if : ${{ job.status == 'success' }}
      run : 
        echo "success"
            
    - name : Printing name 
      run : echo "My name is $name"

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.version }}
    
    - name: Set up Maven
      uses: stCarolas/setup-maven@v4.4
      with:
        maven-version: 3.8.2

    - name: Check Maven version
      run: mvn -version
      
    - name : Installing python 
      uses: actions/setup-python@v4
      with:
        python-version: '3.10' 

    - name : Running python script as file
      run : |
            python /home/pythonscript.py

    - name: Install_git
      id : contents
      run: |
        sudo apt-get install -y git 
        git --version > mytouch.txt
        conten=$( cat mytouch.txt ) 
        echo "::set-output name=test::$conten"
        echo "::set-output name=test1::git --version"

    - name: Build project with Maven
      run: mvn -B package --file pom.xml

    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Storing artifacts
      uses: actions/upload-artifact@v3
      with:
        name: myArtifacts
        path : /home/ubuntu/actions-runner/~/home/ubuntu/workingdirectory/java-hello-world-with-maven/java-hello-world-with-maven
        # retention-days: 1
    
#     - name : Creating a label
#       id : conty
#       run : |
#               if [[ $GITHUB_EVENT_NAME == boom ]]; then 
#                 echo "::set-output name=taggy::vitty"
#               else 
#                 echo "::set-output name=taggy::vitto"
#               fi 
    
    - name: Create dir
      run: |
        sudo mkdir -p /opt/mydirname

    - name: Copy files from repo to Runner
      run: |
        sudo cp ./.github/workflows/myfile.sh ./.github/myfile.sh
        sudo chmod +x ./.github/myfile.sh
        
    - name: Run build script 
      run: sudo ./.github/myfile.sh
      shell: bash
    
#     - name: copy file via ssh password
#       run : sudo sshpass -p '${{ secrets.PASSWORD }}' scp /root/myfile.txt root@3.110.104.77:/root    

#   Output-Testing:

#     runs-on : self-hosted

#     needs: Maven-java-Build
    
#     steps:
#       - name : Displayin Git Value
#         run: |
#               echo ${{needs.Maven-java-Build.outputs.output1}} 
              
        
#   Resuable-Workflow:
  
#       needs: Maven-java-Build
      
    
#       uses : raji2306/Thoughtworks-mediawikiApplcation/.github/workflows/resuable.yaml@master
#       with :
#         image : resuableimage
#         userid : raji2306
#         tag :  ${{needs.Maven-java-Build.outputs.output2}}
#       secrets :
#         DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#         DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }} 
      
      
      
      

